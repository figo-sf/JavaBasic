// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ssip_oa.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SSIP;

public class ScheduleMessage implements Cloneable, java.io.Serializable
{
    public String schedule_file_name;

    public int schedule_file_size;

    public int updated_time;

    public ScheduleMessage()
    {
    }

    public ScheduleMessage(String schedule_file_name, int schedule_file_size, int updated_time)
    {
        this.schedule_file_name = schedule_file_name;
        this.schedule_file_size = schedule_file_size;
        this.updated_time = updated_time;
    }

    public boolean
    equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ScheduleMessage _r = null;
        if(rhs instanceof ScheduleMessage)
        {
            _r = (ScheduleMessage)rhs;
        }

        if(_r != null)
        {
            if(schedule_file_name != _r.schedule_file_name)
            {
                if(schedule_file_name == null || _r.schedule_file_name == null || !schedule_file_name.equals(_r.schedule_file_name))
                {
                    return false;
                }
            }
            if(schedule_file_size != _r.schedule_file_size)
            {
                return false;
            }
            if(updated_time != _r.updated_time)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::SSIP::ScheduleMessage");
        __h = IceInternal.HashUtil.hashAdd(__h, schedule_file_name);
        __h = IceInternal.HashUtil.hashAdd(__h, schedule_file_size);
        __h = IceInternal.HashUtil.hashAdd(__h, updated_time);
        return __h;
    }

    public Object
    clone()
    {
        Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(schedule_file_name);
        __os.writeInt(schedule_file_size);
        __os.writeInt(updated_time);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        schedule_file_name = __is.readString();
        schedule_file_size = __is.readInt();
        updated_time = __is.readInt();
    }

    public static final long serialVersionUID = 1511804588L;
}
